{"ast":null,"code":"var _jsxFileName = \"/Users/lichellegaerlan/Documents/lichellegaerlan.github.io/src/Components/ReadingProgress.js\";\nimport React from 'react';\n\nconst ReadingProgress = ({\n  target\n}) => {\n  const [readingProgress, setReadingProgress] = useState(0);\n\n  const scrollListener = () => {\n    if (!target.current) {\n      return;\n    }\n\n    const element = target.current;\n    const totalHeight = element.clientHeight - element.offsetTop - window.innerHeight;\n    const windowScrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n\n    if (windowScrollTop === 0) {\n      return setReadingProgress(0);\n    }\n\n    if (windowScrollTop > totalHeight) {\n      return setReadingProgress(100);\n    }\n\n    setReadingProgress(windowScrollTop / totalHeight * 100);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => window.removeEventListener(\"scroll\", scrollListener);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `reading-progress-bar`,\n    style: {\n      width: `${readingProgress}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  });\n};","map":{"version":3,"sources":["/Users/lichellegaerlan/Documents/lichellegaerlan.github.io/src/Components/ReadingProgress.js"],"names":["React","ReadingProgress","target","readingProgress","setReadingProgress","useState","scrollListener","current","element","totalHeight","clientHeight","offsetTop","window","innerHeight","windowScrollTop","pageYOffset","document","documentElement","scrollTop","body","useEffect","addEventListener","removeEventListener","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACpC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCC,QAAQ,CAAC,CAAD,CAAtD;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAI,CAACJ,MAAM,CAACK,OAAZ,EAAqB;AACnB;AACD;;AAED,UAAMC,OAAO,GAAWN,MAAM,CAACK,OAA/B;AACA,UAAME,WAAW,GAAOD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,SAA/B,GAA4CC,MAAM,CAACC,WAA3E;AACA,UAAMC,eAAe,GAAGF,MAAM,CAACG,WAAP,IAAsBC,QAAQ,CAACC,eAAT,CAAyBC,SAA/C,IAA4DF,QAAQ,CAACG,IAAT,CAAcD,SAA1E,IAAuF,CAA/G;;AAEA,QAAIJ,eAAe,KAAK,CAAxB,EAA2B;AACzB,aAAOV,kBAAkB,CAAC,CAAD,CAAzB;AACD;;AAED,QAAIU,eAAe,GAAGL,WAAtB,EAAmC;AACjC,aAAOL,kBAAkB,CAAC,GAAD,CAAzB;AACD;;AAEDA,IAAAA,kBAAkB,CAAEU,eAAe,GAAGL,WAAnB,GAAkC,GAAnC,CAAlB;AACD,GAlBD;;AAoBAW,EAAAA,SAAS,CAAC,MAAM;AACdR,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCf,cAAlC;AACA,WAAO,MAAMM,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqChB,cAArC,CAAb;AACD,GAHQ,CAAT;AAKA,sBAAO;AAAK,IAAA,SAAS,EAAG,sBAAjB;AAAwC,IAAA,KAAK,EAAE;AAACiB,MAAAA,KAAK,EAAG,GAAEpB,eAAgB;AAA3B,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA5BH","sourcesContent":["import React from 'react';\n\nconst ReadingProgress = ({ target }) => {\n    const [readingProgress, setReadingProgress] = useState(0);\n    const scrollListener = () => {\n      if (!target.current) {\n        return;\n      }\n  \n      const element         = target.current;\n      const totalHeight     = element.clientHeight - element.offsetTop - (window.innerHeight);\n      const windowScrollTop = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;\n  \n      if (windowScrollTop === 0) {\n        return setReadingProgress(0);\n      }\n  \n      if (windowScrollTop > totalHeight) {\n        return setReadingProgress(100);\n      }\n  \n      setReadingProgress((windowScrollTop / totalHeight) * 100);\n    };\n    \n    useEffect(() => {\n      window.addEventListener(\"scroll\", scrollListener);\n      return () => window.removeEventListener(\"scroll\", scrollListener);\n    });\n  \n    return <div className={`reading-progress-bar`} style={{width: `${readingProgress}%`}} />;\n  };"]},"metadata":{},"sourceType":"module"}